version: '3.5'

services:
  # их два db  и ниже  app   назвать можно по своему усмотрению
  db:
    # Образ - postgres  - это имя смотрю на ДОКЕРХАБ
    image: postgres

    #restart: always Политика перезапуска ЭТО ЕСЛИ БЭК ЗАНОВО СТАРТУЕТ
    #ТО И БАЗА ДАННЫХ БУДЕТ ЗАНОВО СТАРТОВАТЬ
    restart: always


    environment:
      - POSTGRES_PASSWORD=pavel

    # Название (НЕ ОБРАЗА) контейнера я сам придумываю ибо
        #по умолчанию абыкак называть будет
    container_name: postgres

    # если контейнер умирает- умрут и данные из базы ибо
    # новый контейнер новую базу создаст И ТУТ Я ПРОПИСАЛ
    #МЕСТО У СЕБЯ НА ДИСКЕ В КОТОРОМ БУДУТ ДАННЫЕ
    #ДЛЯ БАЗЫ СКЛАДЫВАТСЯ и новая база будет
    #эти данные из этого места брать
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    # Порт по которому мы сможем обращаться к приложению : порт приложения внутри контейнера
    ports:
      - '5432:5432'

    # название я придумываю любое  - ниже ТАМ ГДЕ ПРИЛОЖЕНИЕ
     # этоже название указываю и тогда связь будет
       #  базы данных и приложения

    networks:
      - 'nest-docker-compose-example1-network'

  # Название приложения моего- могу как захочу тут написать
  app:
    # Указываею  для создания ДОКЕР образа приложения
    build:
      # Определяет либо путь к каталогу, содержащему файл Dockerfile, либо URL-адрес репозитория git
      # у меня ДОКЕР КОМПОУЗ лежит на одном
      #уровне с ДОКЕРФАЙЛОМ поэтому просто точка
      context: .
      # Название файла Dockerfile
      dockerfile: Dockerfile


    # Название контейнера я свое придумываю
    container_name: nest-postgresql-docker-container1

    # env переменные

    # - POSTGRES_HOST=db  здесь db -это в самом верху данного
    # файла я прописал services:  db   - тоесть сам задал
    #  имя раздела (мог другое задать и тогда тут это другое прописать надо)
    environment:
      - POSTGRES_HOST=localhost
      - POSTGRES_PORT=5432
      - POSTGRES_PASSWORD=pavel
      - APP_PORT=9876
    # Порт по которому мы сможем обращаться к приложению : порт приложения внутри контейнера
    ports:
      - '9876:9876'
    # Определяем порядок запуска. app запуститься после db
    depends_on:
      - db

    # Тома для постоянного хранения данных
      #(при пересборке не удаляется)
       # на свое усмотрение тут адрес прописал
    volumes:
      - ./src:/app/src
    # Сети к которым подключен контейнер
    networks:
      - nest-docker-compose-example1-network
# Определяем сеть для наших контейнеров
networks:
  nest-docker-compose-example1-network:
    driver: bridge

# Для запуска используем команду в терминале вебшторма
  #docker-compose up